{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/data/api.service.ts","./src/app/transactions/transactions.component.ts","./src/app/transactions/transactions.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"layout flex-fill\">\n  <div class=\"main-navbar\">\n    <div class=\"px-3 px-md-4 py-2\">\n      <nav class=\"col navbar navbar-expand-lg align-items-stretch justify-content-between flex-nowrap p-0\">\n        <div class=\"container\">\n          <div class=\"col-12 row\">\n            <label>Wallet address:</label>\n            <input class=\"form-control\" type=\"text\" [(ngModel)]=\"profile.account\"\n                   placeholder=\"Please enter the wallet address erd1..\"/>\n          </div>\n        </div>\n      </nav>\n    </div>\n  </div>\n</div>\n\n<div class=\"container d-flex flex-column flex-grow-1\">\n  <main class=\"main-content row d-flex flex-column \">\n    <div class=\"row\">\n      <app-transactions [profile]=\"profile\" [egldPriceUSD]=\"egldPriceUSD\" *ngIf=\"profile.account\"></app-transactions>\n    </div>\n    <div></div>\n    <div class=\"toast-messages d-flex flex-column align-items-center justify-content-sm-end\"></div>\n  </main>\n</div>\n\n<router-outlet></router-outlet>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Profile} from './data/models/profile';\nimport {ApiService} from './data/api.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  profile: Profile = {\n    account: '',\n    transactionsCount: 2,\n    status: 'all'\n  };\n\n  egldPriceUSD = 250;\n\n  constructor(private api: ApiService) {\n  }\n\n ngOnInit(): void {\n   this.loadSettings();\n   this.api.getPriceEGLD().subscribe(egldPrice => this.egldPriceUSD = egldPrice);\n }\n\n ngOnDestroy(): void {\n   this.storeSettings();\n }\n\n  private storeSettings(): void {\n    localStorage.setItem('profile', JSON.stringify(this.profile));\n  }\n\n  private loadSettings(): void {\n    const value = localStorage.getItem('profile');\n    if (value) {\n      this.profile = JSON.parse(value);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TransactionsComponent } from './transactions/transactions.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TransactionsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {Transaction} from './models/transaction';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {Economics} from './models/economics';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  getTransactions(account: string, count: number): Observable<Transaction[]> {\n    const url = `https://api.elrond.com/accounts/${account}/transactions?size=${count}`;\n    return this.http.get<Transaction[]>(url);\n  }\n\n  getPriceEGLD(): Observable<number> {\n    const url = `https://api.elrond.com/economics`;\n    return this.http.get<Economics>(url).pipe(\n      map((economics: Economics) => economics.price)\n    );\n  }\n}\n","import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {Transaction} from '../data/models/transaction';\nimport {ApiService} from '../data/api.service';\nimport * as _ from 'lodash';\nimport {Profile} from '../data/models/profile';\n\n@Component({\n  selector: 'app-transactions',\n  templateUrl: './transactions.component.html',\n  styleUrls: ['./transactions.component.css']\n})\nexport class TransactionsComponent implements OnChanges {\n\n  @Input()\n  profile: Profile = {\n    account: '',\n    transactionsCount: 2,\n    status: 'all'\n  };\n\n  @Input()\n  egldPriceUSD = 250;\n\n  transactions: Transaction[] = [];\n  numberFormat = '1.2-2';\n  dateTimeFormat = 'MMM dd, yyyy hh:mm:ss a';\n\n  constructor(private api: ApiService) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.loadData();\n  }\n\n  public loadData(): void {\n    if (this.profile.account.length === 62 && this.profile.transactionsCount > 0) {\n      this.api.getTransactions(this.profile.account, this.profile.transactionsCount)\n        .subscribe(transactions => {\n          if (this.profile.status !== 'all') {\n            this.transactions = _.filter(transactions, t => t.status === this.profile.status);\n          } else {\n            this.transactions = transactions;\n          }\n          this.transactions = _.reverse(_.sortBy(this.transactions, 'timestamp'));\n        });\n    }\n  }\n\n  public description(transaction: Transaction): string {\n    if (transaction.action) {\n      return transaction.action.description;\n    } else {\n      return 'Transfer';\n    }\n  }\n\n  public eGLDToUSD(egld: number): number {\n    return this.egldPriceUSD * egld / Math.pow(10, 18);\n  }\n\n  public eGLD(egld: number): number {\n    return egld / Math.pow(10, 18);\n  }\n\n  public totalUSD(field: string): number {\n    let sum = 0;\n    this.transactions.forEach((transaction: any) => sum = sum + this.eGLDToUSD(transaction[field]));\n    return sum;\n  }\n\n}\n","<div class=\"col-12 py-spacer h5 m-0 text-secondary\">Transactions</div>\n<div class=\"col-12 mb-4\">\n  <div class=\"standard-card card farm-card overflow-hidden\">\n    <div class=\"card-header p-4 d-flex align-items-center justify-content-between rounded\"\n         style=\"cursor: pointer;\">\n      <div class=\"col-12\">\n        <div class=\"form-group row\">\n          <div class=\"col-4\">\n            <label>Transaction count</label>\n            <input class=\"form-control\" type=\"number\" [(ngModel)]=\"profile.transactionsCount\"\n                   (ngModelChange)=\"loadData()\"/>\n          </div>\n          <div class=\"col-4\">\n            <label>EGLD Price USD</label>\n            <input class=\"form-control\" type=\"number\" [(ngModel)]=\"egldPriceUSD\" (ngModelChange)=\"loadData()\"/>\n          </div>\n          <div class=\"col-4\">\n            <label>Status</label>\n            <select class=\"form-control\" [(ngModel)]=\"profile.status\" (ngModelChange)=\"loadData()\">\n              <option value=\"all\">all</option>\n              <option value=\"success\">success</option>\n              <option value=\"fail\">fail</option>\n            </select>\n          </div>\n        </div>\n\n        <div *ngIf=\"transactions.length === 0\">\n          No results\n        </div>\n        <table class=\"table\" *ngIf=\"transactions.length > 0\">\n          <thead>\n          <tr>\n            <th>Nonce</th>\n            <th class=\"col-2\">Date</th>\n            <th class=\"col-5\">Description</th>\n            <th>Status</th>\n            <th>Value</th>\n            <th>Value $</th>\n            <th>Fee $</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr class=\"bg-primary\">\n            <td></td>\n            <td></td>\n            <td>Total for {{transactions.length}} transactions</td>\n            <td></td>\n            <td>{{totalUSD('value') / egldPriceUSD | number: numberFormat}}</td>\n            <td>${{totalUSD('value') | number: numberFormat}}</td>\n            <td>${{totalUSD('fee') | number: numberFormat}}</td>\n          </tr>\n          <tr *ngFor=\"let transaction of transactions\">\n            <td>{{transaction.nonce}}</td>\n            <td>{{transaction.timestamp * 1000 | date:dateTimeFormat}}</td>\n            <td>{{description(transaction)}}</td>\n            <td>{{transaction.status}}</td>\n            <td>{{eGLD(transaction.value) | number: numberFormat}}</td>\n            <td>${{eGLDToUSD(transaction.value) | number: numberFormat}}</td>\n            <td>${{eGLDToUSD(transaction.fee) | number: numberFormat}}</td>\n          </tr>\n          <tr class=\"bg-primary\">\n            <td></td>\n            <td></td>\n            <td>Total for {{transactions.length}} transactions</td>\n            <td></td>\n            <td>{{totalUSD('value') / egldPriceUSD | number: numberFormat}}</td>\n            <td>${{totalUSD('value') | number: numberFormat}}</td>\n            <td>${{totalUSD('fee') | number: numberFormat}}</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}